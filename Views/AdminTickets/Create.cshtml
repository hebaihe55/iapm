@model iapm.Models.Ticket

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/_LayoutPage.cshtml";
}


<h2>Create</h2>


@using (Html.BeginForm("Create", "AdminTickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.entitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.entitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.entitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.iconcount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.iconcount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.iconcount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.btime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.btime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.btime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.etime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.etime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.etime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.detailImg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="file" id="detailImg" name="detailImg" />


                @Html.ValidationMessageFor(model => model.detailImg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.TextAreaFor(model => model.detail, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })






               
               
   
       



              
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endetail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
               
            

                @Html.TextAreaFor(model => model.endetail, new { htmlAttributes = new { @class = "form-control" } })
                          
            

               
                
                 @Html.ValidationMessageFor(model => model.endetail, "", new { @class = "text-danger" })
            </div>
        </div>

     
  
  

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<link href="~/css/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<script type="text/javascript" src="~/js/bootstrap-datetimepicker.js" charset="UTF-8"></script>
<script type="text/javascript" src="~/js/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>
<script src="http://cdn.ckeditor.com/4.5.8/basic/ckeditor.js"></script>
<script type="text/javascript">
    //jeDate.skin('gray');



    $('#btime').datetimepicker({
        language: 'zh-CN',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        forceParse: 0,
        showMeridian: 1
    });
    $('#etime').datetimepicker({
        language: 'zh-CN',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        forceParse: 0,
        showMeridian: 1
    });

    CKEDITOR.replace('detail');
    CKEDITOR.replace('endetail');
</script>

